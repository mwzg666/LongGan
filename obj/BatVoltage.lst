C251 COMPILER V5.60.0,  BatVoltage                                                         23/05/23  17:17:46  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE BatVoltage
OBJECT MODULE PLACED IN .\obj\BatVoltage.obj
COMPILER INVOKED BY: D:\KeilMDK\C251\BIN\C251.EXE Hardware\BatVoltage\BatVoltage.c XSMALL INTR2 OPTIMIZE(0,SPEED) BROWSE
                    - INCDIR(.\User;.\Hardware\CalcDoseRate;.\Hardware\Cmd;.\Hardware\Flash;.\Hardware\IIC;.\Hardware\Mcp4725;.\Hardware\Sens
                    -or;.\Hardware\System;.\Hardware\Uart;.\User;.\Hardware\BatVoltage;.\Hardware\DoseRate;.\Hardware\CalcCps;.\Hardware\CRC;
                    -.\Hardware\Queue) PRINT(.\obj\BatVoltage.lst) OBJECT(.\obj\BatVoltage.obj) 

stmt  level    source

    1          #include "main.h"
    2          
    3          #define AD_NUM 10
    4          #define WWQ_time_out 0xfff
    5          
    6          void Adc_Init()
    7          {
    8   1          P_SW2 |= 0x80;
    9   1          ADCTIM = 0x3f;      //设置 ADC 内部时序，ADC采样时间建议设最大值
   10   1          ADCCFG = 0x2f;      //设置 ADC 时钟为系统时钟/2/16/16
   11   1          ADC_CONTR = 0x80;   //使能 ADC 模块
   12   1          //EADC = 1;
   13   1          _nop_();
   14   1          _nop_();
   15   1          
   16   1      }
   17          
   18          #if 1
   19          uint16_t arrange(uint16_t *a,uint8_t n);
   20          #endif
   21          
   22          //unsigned int ADC16Result = 0; 
   23          
   24          uint16_t DeviceGetBatVal(void)
   25          {
   26   1          #if 1 
   27   1          uint16_t i = 0,j = 0, myad[AD_NUM] = {0};
   28   1              float    temp = 0.0;
   29   1          
   30   1          i = 0;
   31   1          while(i < AD_NUM)
   32   1          {
   33   2              ADC_START = 1;                   // Start conversions
   34   2              ADC_CONTR |= 0x01;               //通道1
   35   2              while (!(ADC_FLAG))
   36   2              {
   37   3                  j++;  //防止AD内部电路出错
   38   3                  if( j == WWQ_time_out)
   39   3                  {
   40   4                      return 0;//2v,ad这时可能就不工作了
   41   4                  } 
   42   3              }
   43   2       
   44   2              ADC_FLAG = 0;;   // Clear Int
   45   2              j = 0; //测量完一次
   46   2              myad[i++] = (ADC_RES << 8) | ADC_RESL;
   47   2              delay_us(100);
   48   2          }
   49   1          delay_us(1000);
   50   1          //ADC10CTL0 &= ~ENC; 
   51   1          //delay_us(1000);
   52   1          
   53   1          //ADC12CTL0 &= ~REFON;//省电
   54   1          //delay_us(1000);
   55   1          //ADC10CTL0 &= ~ADC10ON;
   56   1          //delay_us(1000);
C251 COMPILER V5.60.0,  BatVoltage                                                         23/05/23  17:17:46  PAGE 2   

   57   1          
   58   1          //P6SEL &= ~BIT7; 
   59   1      
   60   1          //start modified by zhaozhenxiang 20190402
   61   1          //temp = arrange(myad,AD_NUM)*4500.0;
   62   1          //temp = temp/4095.0;
   63   1          temp = arrange((uint16_t *)myad,AD_NUM);
   64   1          temp = temp*8.8;
   65   1          //temp = temp*15.8-2502;
   66   1          //temp = temp*2; //temp * 2.99 + 28; //电压变换
   67   1          //end modified by zhaozhenxiang 20190402
   68   1          #else
                   
                   float    temp = 0.0;
                   
                   //wrtoADS1110();
                   //ADC16Result = rdfromADS1110();    
               
                   temp = ADC16Result / 65535.0 * 2048 * 3 + 235;
                   #endif
   77   1          return (uint16_t)temp;
   78   1      }
   79          
   80          #if 1
   81          // 去掉两个最大值、和两个最小值
   82          uint16_t arrange(uint16_t *a,uint8_t n)
   83          {
   84   1          uint8_t i,j;
   85   1          uint16_t m;
   86   1      
   87   1          //  排序
   88   1          for (i=0; i<n-1; i++)
   89   1          {
   90   2              for (j=i+1; j<n; j++)
   91   2              {
   92   3                  if (a[j]>a[i])
   93   3                  {
   94   4                      m=a[i];
   95   4                      a[i]=a[j];
   96   4                      a[j]=m;
   97   4                  }
   98   3              }
   99   2          }
  100   1          
  101   1          return ((a[3] + a[4] + a[5] + a[6])/4);
  102   1      }
  103          #endif
  104          
  105          void DeviceGetBatAlarm(STU_BATTERY *bat)
  106          {
  107   1              static uint8_t oldbat = 100;//电池电量显示只降不升
  108   1              bat->Voltage = DeviceGetBatVal();
  109   1              
  110   1              if(bat->Voltage < 3100)
  111   1              {
  112   2                      bat->batPercent = 0;
  113   2              }
  114   1              else
  115   1              {
  116   2                      bat->batPercent = (bat->Voltage-3100)/10;//电池电压理论3~4.2V，我们弄成3.1~4.1
  117   2              }
  118   1              if(oldbat < bat->batPercent)
  119   1              {
  120   2                      bat->batPercent = oldbat;
  121   2              }
  122   1              if(bat->batPercent>100)
C251 COMPILER V5.60.0,  BatVoltage                                                         23/05/23  17:17:46  PAGE 3   

  123   1              {
  124   2                      bat->batPercent = 100;
  125   2              }
  126   1              if(bat->batPercent<3)
  127   1              {
  128   2                      bat->Status = 1;
  129   2              }
  130   1              else if(bat->batPercent>15)
  131   1              {
  132   2                      bat->Status = 0;
  133   2              }
  134   1              oldbat = bat->batPercent;
  135   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       700     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        42     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        25     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
